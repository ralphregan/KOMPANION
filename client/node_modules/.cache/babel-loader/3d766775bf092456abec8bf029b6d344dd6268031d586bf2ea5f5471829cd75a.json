{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nexport default function SendData({\n  userLocation,\n  setWeatherData,\n  setIsError\n}) {\n  _s();\n  useEffect(() => {\n    async function Send() {\n      if (!userLocation) {\n        setIsError(\"Something went wrong with fetching your location\");\n        try {\n          const {\n            City\n          } = userLocation;\n          const response = await axios.get(\"/\");\n        } catch (error) {}\n      }\n      try {\n        const {\n          latitude,\n          longitude\n        } = userLocation;\n        const response = await axios.post(\"/weather\", {\n          latitude: latitude,\n          longitude: longitude\n        });\n        const result = await response.data;\n        console.log(\"server response:\", result.content);\n        setWeatherData(result);\n      } catch (error) {\n        console.log(\"Error sending Data:\", error);\n        setIsError(error.message);\n      }\n    }\n    Send();\n  }, [userLocation, setWeatherData, setIsError]);\n  return null;\n}\n_s(SendData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SendData;\nvar _c;\n$RefreshReg$(_c, \"SendData\");","map":{"version":3,"names":["axios","useEffect","SendData","userLocation","setWeatherData","setIsError","_s","Send","City","response","get","error","latitude","longitude","post","result","data","console","log","content","message","_c","$RefreshReg$"],"sources":["C:/Users/rapheal/Desktop/myProject/client/src/SendDataServer.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function SendData({ userLocation , setWeatherData, setIsError }) {\r\n\r\nuseEffect(()=>{\r\n\r\n    async function Send() {\r\n        if (!userLocation) {  setIsError(\"Something went wrong with fetching your location\") \r\n\r\ntry {\r\n  const {City} = userLocation\r\n  const response = await axios.get(\"/\")\r\n  \r\n} catch (error) {\r\n  \r\n}\r\n        }\r\n    \r\n\r\n\r\n\r\n        try {\r\n          const { latitude, longitude } = userLocation\r\n          \r\n          const response = await axios.post(\"/weather\", {latitude: latitude, longitude: longitude});\r\n          const result = await response.data;\r\n          console.log(\"server response:\", result.content)\r\n    \r\n          setWeatherData(result)\r\n         \r\n    \r\n        } catch (error) { console.log(\"Error sending Data:\", error );\r\n          setIsError(error.message )\r\n        \r\n         }\r\n      }\r\n      Send()\r\n} , [userLocation, setWeatherData, setIsError])\r\nreturn null\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAEjC,eAAe,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAGC,cAAc;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAEhFL,SAAS,CAAC,MAAI;IAEV,eAAeM,IAAIA,CAAA,EAAG;MAClB,IAAI,CAACJ,YAAY,EAAE;QAAGE,UAAU,CAAC,kDAAkD,CAAC;QAE5F,IAAI;UACF,MAAM;YAACG;UAAI,CAAC,GAAGL,YAAY;UAC3B,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAG,CAAC;QAEvC,CAAC,CAAC,OAAOC,KAAK,EAAE,CAEhB;MACQ;MAKA,IAAI;QACF,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGV,YAAY;QAE5C,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACc,IAAI,CAAC,UAAU,EAAE;UAACF,QAAQ,EAAEA,QAAQ;UAAEC,SAAS,EAAEA;QAAS,CAAC,CAAC;QACzF,MAAME,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI;QAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAACI,OAAO,CAAC;QAE/Cf,cAAc,CAACW,MAAM,CAAC;MAGxB,CAAC,CAAC,OAAOJ,KAAK,EAAE;QAAEM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEP,KAAM,CAAC;QAC1DN,UAAU,CAACM,KAAK,CAACS,OAAQ,CAAC;MAE3B;IACH;IACAb,IAAI,CAAC,CAAC;EACZ,CAAC,EAAG,CAACJ,YAAY,EAAEC,cAAc,EAAEC,UAAU,CAAC,CAAC;EAC/C,OAAO,IAAI;AAEX;AAACC,EAAA,CAtCuBJ,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}