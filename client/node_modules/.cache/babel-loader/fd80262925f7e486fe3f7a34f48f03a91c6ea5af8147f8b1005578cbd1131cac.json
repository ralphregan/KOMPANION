{"ast":null,"code":"import{useEffect,useRef}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";export default function SendRegister(_ref){let{Data,dispatch,hasSent}=_ref;const navigate=useNavigate();const initialMount=useRef(true);useEffect(function(){if(initialMount.current){initialMount.current=false;return;}if(!Data||hasSent){return;}const controller=new AbortController();async function send(){const api=Data.login?'/Login':'/Register';console.log(Data);try{console.log(\"started\");dispatch({type:\"SEND_START\"});const response=await axios.post(api,Data);const result=response.data;console.log(result);dispatch({type:\"SEND_SUCCESS\",payload:result});if(Data.login)navigate(\"/day\");}catch(error){console.log(\"there is an err\",error);dispatch({type:\"SEND_FAILURE\",payload:error.message});}finally{if(!controller.signal.aborted){dispatch({type:\"RESET\"});}}}send();return()=>controller.abort();},[Data,hasSent,dispatch,navigate]);}","map":{"version":3,"names":["useEffect","useRef","useNavigate","axios","SendRegister","_ref","Data","dispatch","hasSent","navigate","initialMount","current","controller","AbortController","send","api","login","console","log","type","response","post","result","data","payload","error","message","signal","aborted","abort"],"sources":["C:/Users/rapheal/Desktop/myProject/client/src/Day/SendLoginAndRegister.js"],"sourcesContent":["import { useEffect, useRef} from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nexport default function SendRegister({Data, dispatch, hasSent}) {\r\n const navigate = useNavigate()\r\n    const initialMount = useRef(true)\r\n\r\nuseEffect(function() {\r\nif(initialMount.current){\r\n    initialMount.current= false \r\n    return\r\n}\r\n\r\nif(!Data || hasSent) {\r\n   \r\n    return\r\n}\r\n\r\nconst controller = new AbortController()\r\nasync function send() {\r\n    const api = Data.login ? '/Login' : '/Register'\r\n    console.log(Data)\r\n    try {\r\n        console.log(\"started\")\r\n            dispatch({type: \"SEND_START\"})\r\n    const response = await axios.post(api, Data)\r\n    const result = response.data \r\n    console.log(result)\r\n    dispatch({ type: \"SEND_SUCCESS\", payload: result });\r\n    if(Data.login) navigate(\"/day\")\r\n} catch (error) {\r\n    console.log(\"there is an err\", error)\r\n \r\n    dispatch({ type: \"SEND_FAILURE\", payload: error.message })\r\n}\r\nfinally{\r\n    if (!controller.signal.aborted) {\r\n        dispatch({ type: \"RESET\" });\r\n    }\r\n}\r\n}\r\nsend()\r\nreturn ()=> controller.abort()\r\n},[Data,hasSent, dispatch, navigate])\r\n}"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAO,OAAO,CACxC,OAAUC,WAAW,KAAQ,kBAAkB,CAC/C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,cAAe,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA4B,IAA3B,CAACC,IAAI,CAAEC,QAAQ,CAAEC,OAAO,CAAC,CAAAH,IAAA,CAC7D,KAAM,CAAAI,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC3B,KAAM,CAAAQ,YAAY,CAAGT,MAAM,CAAC,IAAI,CAAC,CAErCD,SAAS,CAAC,UAAW,CACrB,GAAGU,YAAY,CAACC,OAAO,CAAC,CACpBD,YAAY,CAACC,OAAO,CAAE,KAAK,CAC3B,OACJ,CAEA,GAAG,CAACL,IAAI,EAAIE,OAAO,CAAE,CAEjB,OACJ,CAEA,KAAM,CAAAI,UAAU,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACxC,cAAe,CAAAC,IAAIA,CAAA,CAAG,CAClB,KAAM,CAAAC,GAAG,CAAGT,IAAI,CAACU,KAAK,CAAG,QAAQ,CAAG,WAAW,CAC/CC,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC,CACjB,GAAI,CACAW,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CAClBX,QAAQ,CAAC,CAACY,IAAI,CAAE,YAAY,CAAC,CAAC,CACtC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,IAAI,CAACN,GAAG,CAAET,IAAI,CAAC,CAC5C,KAAM,CAAAgB,MAAM,CAAGF,QAAQ,CAACG,IAAI,CAC5BN,OAAO,CAACC,GAAG,CAACI,MAAM,CAAC,CACnBf,QAAQ,CAAC,CAAEY,IAAI,CAAE,cAAc,CAAEK,OAAO,CAAEF,MAAO,CAAC,CAAC,CACnD,GAAGhB,IAAI,CAACU,KAAK,CAAEP,QAAQ,CAAC,MAAM,CAAC,CACnC,CAAE,MAAOgB,KAAK,CAAE,CACZR,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEO,KAAK,CAAC,CAErClB,QAAQ,CAAC,CAAEY,IAAI,CAAE,cAAc,CAAEK,OAAO,CAAEC,KAAK,CAACC,OAAQ,CAAC,CAAC,CAC9D,CAAC,OACM,CACH,GAAI,CAACd,UAAU,CAACe,MAAM,CAACC,OAAO,CAAE,CAC5BrB,QAAQ,CAAC,CAAEY,IAAI,CAAE,OAAQ,CAAC,CAAC,CAC/B,CACJ,CACA,CACAL,IAAI,CAAC,CAAC,CACN,MAAO,IAAKF,UAAU,CAACiB,KAAK,CAAC,CAAC,CAC9B,CAAC,CAAC,CAACvB,IAAI,CAACE,OAAO,CAAED,QAAQ,CAAEE,QAAQ,CAAC,CAAC,CACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}